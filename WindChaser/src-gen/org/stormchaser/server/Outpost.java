// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: org/stormchaser/server/outpost.proto

package org.stormchaser.server;

public final class Outpost {
  private Outpost() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MeasurementsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int64 measurementStarttimeUTC = 1;
    boolean hasMeasurementStarttimeUTC();
    long getMeasurementStarttimeUTC();
    
    // required uint32 measurementIntervallMs = 2;
    boolean hasMeasurementIntervallMs();
    int getMeasurementIntervallMs();
    
    // repeated uint32 ticks = 3;
    java.util.List<java.lang.Integer> getTicksList();
    int getTicksCount();
    int getTicks(int index);
  }
  public static final class Measurements extends
      com.google.protobuf.GeneratedMessage
      implements MeasurementsOrBuilder {
    // Use Measurements.newBuilder() to construct.
    private Measurements(Builder builder) {
      super(builder);
    }
    private Measurements(boolean noInit) {}
    
    private static final Measurements defaultInstance;
    public static Measurements getDefaultInstance() {
      return defaultInstance;
    }
    
    public Measurements getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.stormchaser.server.Outpost.internal_static_org_stormchaser_server_Measurements_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.stormchaser.server.Outpost.internal_static_org_stormchaser_server_Measurements_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int64 measurementStarttimeUTC = 1;
    public static final int MEASUREMENTSTARTTIMEUTC_FIELD_NUMBER = 1;
    private long measurementStarttimeUTC_;
    public boolean hasMeasurementStarttimeUTC() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getMeasurementStarttimeUTC() {
      return measurementStarttimeUTC_;
    }
    
    // required uint32 measurementIntervallMs = 2;
    public static final int MEASUREMENTINTERVALLMS_FIELD_NUMBER = 2;
    private int measurementIntervallMs_;
    public boolean hasMeasurementIntervallMs() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getMeasurementIntervallMs() {
      return measurementIntervallMs_;
    }
    
    // repeated uint32 ticks = 3;
    public static final int TICKS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> ticks_;
    public java.util.List<java.lang.Integer>
        getTicksList() {
      return ticks_;
    }
    public int getTicksCount() {
      return ticks_.size();
    }
    public int getTicks(int index) {
      return ticks_.get(index);
    }
    
    private void initFields() {
      measurementStarttimeUTC_ = 0L;
      measurementIntervallMs_ = 0;
      ticks_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasMeasurementStarttimeUTC()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMeasurementIntervallMs()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, measurementStarttimeUTC_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, measurementIntervallMs_);
      }
      for (int i = 0; i < ticks_.size(); i++) {
        output.writeUInt32(3, ticks_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, measurementStarttimeUTC_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, measurementIntervallMs_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ticks_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(ticks_.get(i));
        }
        size += dataSize;
        size += 1 * getTicksList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.stormchaser.server.Outpost.Measurements parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.stormchaser.server.Outpost.Measurements parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.stormchaser.server.Outpost.Measurements parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.stormchaser.server.Outpost.Measurements parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.stormchaser.server.Outpost.Measurements parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.stormchaser.server.Outpost.Measurements parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.stormchaser.server.Outpost.Measurements parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.stormchaser.server.Outpost.Measurements parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.stormchaser.server.Outpost.Measurements parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.stormchaser.server.Outpost.Measurements parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.stormchaser.server.Outpost.Measurements prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.stormchaser.server.Outpost.MeasurementsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.stormchaser.server.Outpost.internal_static_org_stormchaser_server_Measurements_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.stormchaser.server.Outpost.internal_static_org_stormchaser_server_Measurements_fieldAccessorTable;
      }
      
      // Construct using org.stormchaser.server.Outpost.Measurements.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        measurementStarttimeUTC_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        measurementIntervallMs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ticks_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.stormchaser.server.Outpost.Measurements.getDescriptor();
      }
      
      public org.stormchaser.server.Outpost.Measurements getDefaultInstanceForType() {
        return org.stormchaser.server.Outpost.Measurements.getDefaultInstance();
      }
      
      public org.stormchaser.server.Outpost.Measurements build() {
        org.stormchaser.server.Outpost.Measurements result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.stormchaser.server.Outpost.Measurements buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.stormchaser.server.Outpost.Measurements result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.stormchaser.server.Outpost.Measurements buildPartial() {
        org.stormchaser.server.Outpost.Measurements result = new org.stormchaser.server.Outpost.Measurements(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.measurementStarttimeUTC_ = measurementStarttimeUTC_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.measurementIntervallMs_ = measurementIntervallMs_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          ticks_ = java.util.Collections.unmodifiableList(ticks_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.ticks_ = ticks_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.stormchaser.server.Outpost.Measurements) {
          return mergeFrom((org.stormchaser.server.Outpost.Measurements)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.stormchaser.server.Outpost.Measurements other) {
        if (other == org.stormchaser.server.Outpost.Measurements.getDefaultInstance()) return this;
        if (other.hasMeasurementStarttimeUTC()) {
          setMeasurementStarttimeUTC(other.getMeasurementStarttimeUTC());
        }
        if (other.hasMeasurementIntervallMs()) {
          setMeasurementIntervallMs(other.getMeasurementIntervallMs());
        }
        if (!other.ticks_.isEmpty()) {
          if (ticks_.isEmpty()) {
            ticks_ = other.ticks_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureTicksIsMutable();
            ticks_.addAll(other.ticks_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasMeasurementStarttimeUTC()) {
          
          return false;
        }
        if (!hasMeasurementIntervallMs()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              measurementStarttimeUTC_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              measurementIntervallMs_ = input.readUInt32();
              break;
            }
            case 24: {
              ensureTicksIsMutable();
              ticks_.add(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addTicks(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int64 measurementStarttimeUTC = 1;
      private long measurementStarttimeUTC_ ;
      public boolean hasMeasurementStarttimeUTC() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getMeasurementStarttimeUTC() {
        return measurementStarttimeUTC_;
      }
      public Builder setMeasurementStarttimeUTC(long value) {
        bitField0_ |= 0x00000001;
        measurementStarttimeUTC_ = value;
        onChanged();
        return this;
      }
      public Builder clearMeasurementStarttimeUTC() {
        bitField0_ = (bitField0_ & ~0x00000001);
        measurementStarttimeUTC_ = 0L;
        onChanged();
        return this;
      }
      
      // required uint32 measurementIntervallMs = 2;
      private int measurementIntervallMs_ ;
      public boolean hasMeasurementIntervallMs() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getMeasurementIntervallMs() {
        return measurementIntervallMs_;
      }
      public Builder setMeasurementIntervallMs(int value) {
        bitField0_ |= 0x00000002;
        measurementIntervallMs_ = value;
        onChanged();
        return this;
      }
      public Builder clearMeasurementIntervallMs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        measurementIntervallMs_ = 0;
        onChanged();
        return this;
      }
      
      // repeated uint32 ticks = 3;
      private java.util.List<java.lang.Integer> ticks_ = java.util.Collections.emptyList();;
      private void ensureTicksIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          ticks_ = new java.util.ArrayList<java.lang.Integer>(ticks_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Integer>
          getTicksList() {
        return java.util.Collections.unmodifiableList(ticks_);
      }
      public int getTicksCount() {
        return ticks_.size();
      }
      public int getTicks(int index) {
        return ticks_.get(index);
      }
      public Builder setTicks(
          int index, int value) {
        ensureTicksIsMutable();
        ticks_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addTicks(int value) {
        ensureTicksIsMutable();
        ticks_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllTicks(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTicksIsMutable();
        super.addAll(values, ticks_);
        onChanged();
        return this;
      }
      public Builder clearTicks() {
        ticks_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:org.stormchaser.server.Measurements)
    }
    
    static {
      defaultInstance = new Measurements(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.stormchaser.server.Measurements)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_stormchaser_server_Measurements_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_stormchaser_server_Measurements_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$org/stormchaser/server/outpost.proto\022\026" +
      "org.stormchaser.server\"^\n\014Measurements\022\037" +
      "\n\027measurementStarttimeUTC\030\001 \002(\003\022\036\n\026measu" +
      "rementIntervallMs\030\002 \002(\r\022\r\n\005ticks\030\003 \003(\r"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_org_stormchaser_server_Measurements_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_org_stormchaser_server_Measurements_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_stormchaser_server_Measurements_descriptor,
              new java.lang.String[] { "MeasurementStarttimeUTC", "MeasurementIntervallMs", "Ticks", },
              org.stormchaser.server.Outpost.Measurements.class,
              org.stormchaser.server.Outpost.Measurements.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
